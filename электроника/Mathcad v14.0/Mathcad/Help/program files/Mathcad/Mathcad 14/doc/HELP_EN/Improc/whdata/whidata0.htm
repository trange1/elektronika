<html>
<head>
<META HTTP-EQUIV="content-type" CONTENT="text/html; charset=iso-8859-1">
</head>
<body>
<script language="javascript" src="whidata.js"></script>
<script language="javascript">
<!--
 aIE(2,0,"addnoise","Noise","Noise.htm");
 aIE(2,0,"and","Boolean functions","Boolean_functions.htm");
 aIE(2,0,"augment3","Working with matrices","Working_with_matrices.htm");
 aIE(2,0,"binarize","Binarization","Binarization.htm");
 aIE(2,0,"binarize_auto","Binarization","Binarization.htm");
 aIE(2,0,"binarize2","Binarization","Binarization.htm");
 aIE(2,0,"blend","Blending and masking","Blending_and_masking.htm");
 aIE(2,0,"canny","Canny edge finder","Canny_edge_finder.htm");
 aIE(2,0,"center","Recentering an image","Recentering_an_image.htm");
 aIE(2,0,"centsmooth","Smoothing","Smoothing.htm");
 aIE(2,0,"clip","Scaling and clipping","Scaling_and_clipping.htm");
 aIE(2,0,"close","Opening and closing","Opening_and_closing.htm");
 aIE(2,0,"cnvxhull","Convex hull","Convex_hull.htm");
 aIE(2,0,"colgrad","Gradients","Gradients.htm");
 aIE(2,0,"compgrad","Convolution and comparison edge finders","Convolution_and_comparison.htm");
 aIE(2,0,"concomp","Connected component labeling","Connected_component_labeling.htm");
 aIE(2,0,"convol2d","Convolution","Convolution.htm");
 aIE(2,0,"convolve3","Convolution","Convolution.htm");
 aIE(2,0,"convolve5","Convolution","Convolution.htm");
 aIE(2,0,"correl2d","2D image correlation","image_correlation.htm");
 aIE(2,0,"dct2d","Discrete cosine transform","Discrete_cosine_transform.htm");
 aIE(2,0,"diacrisp","Crisping","Crisping.htm");
 aIE(2,0,"difedge","Convolution edge finders","Convolution_edge_finders.htm");
 aIE(2,0,"dilate","Dilation","Dilation.htm");
 aIE(2,0,"dilate4","Dilation","Dilation.htm");
 aIE(2,0,"dilate8","Dilation","Dilation.htm");
 aIE(2,0,"distform","Euclidean distance transform","Euclidean_distance_transform.htm");
 aIE(2,0,"equalize","Equalizing","Equalizing.htm");
 aIE(2,0,"erode","Erosion","Erosion.htm");
 aIE(2,0,"erode4","Erosion","Erosion.htm");
 aIE(2,0,"erode8","Erosion","Erosion.htm");
 aIE(2,0,"extract","Packed","Packed.htm");
 aIE(2,0,"freichen","Convolution edge finders","Convolution_edge_finders.htm");
 aIE(2,0,"funcdeconv","Filtering in the Fourier transform domain","Filter_fourier.htm");
 aIE(2,0,"funconv","Filtering in the Fourier transform domain","Filter_fourier.htm");
 aIE(2,0,"funmap","Mapping","Mapping.htm");
 aIE(2,0,"gaussconv","Filtering with a Gaussian kernel","Filter_gauss.htm");
 aIE(2,0,"gaussdeconv","Filtering with a Gaussian kernel","Filter_gauss.htm");
 aIE(2,0,"getnoise","Median filtering","Median_filtering.htm");
 aIE(2,0,"gray_close","Gray scale morphology","Gray_scale_morphology.htm");
 aIE(2,0,"gray_dilate","Gray scale morphology","Gray_scale_morphology.htm");
 aIE(2,0,"gray_erode","Gray scale morphology","Gray_scale_morphology.htm");
 aIE(2,0,"gray_open","Gray scale morphology","Gray_scale_morphology.htm");
 aIE(2,0,"gray_to_rgb","Converting images - grayscale and color","Converting_images_grayscale.htm");
 aIE(2,0,"hist2d","Histograms","Histograms.htm");
 aIE(2,0,"hls_to_rgb","Converting images - RGB and HLS/HSV","Converting_images_rgb_hlshsv.htm");
 aIE(2,0,"horzflip","Flipping","Flipping.htm");
 aIE(2,0,"hsv_to_rgb","Converting images - RGB and HLS/HSV","Converting_images_rgb_hlshsv.htm");
 aIE(2,0,"idct2D","Discrete cosine transform","Discrete_cosine_transform.htm");
 aIE(2,0,"imhist","Histograms","Histograms.htm");
 aIE(2,0,"imhist2","Histograms","Histograms.htm");
 aIE(2,0,"immse","Error measurement","Error_measurement.htm");
 aIE(2,0,"imquant","Quantization","Quantization.htm");
 aIE(2,0,"imquant2","Quantization","Quantization.htm");
 aIE(2,0,"imsnr","Noise measurement","Noise_measurement.htm");
 aIE(2,0,"invert","Inverting","Inverting.htm");
 aIE(2,0,"invert2","Inverting","Inverting.htm");
 aIE(2,0,"iwave2d","Wavelet transform filtering","Wavelet_transform_filtering.htm");
 aIE(2,0,"kirsch","Convolution and comparison edge finders","Convolution_and_comparison.htm");
 aIE(2,0,"laplace24","Laplacian edge finders","Laplacian_edge_finders.htm");
 aIE(2,0,"laplace4","Laplacian edge finders","Laplacian_edge_finders.htm");
 aIE(2,0,"laplace8","Laplacian edge finders","Laplacian_edge_finders.htm");
 aIE(2,0,"levelmap","Mapping","Mapping.htm");
 aIE(2,0,"mask","Blending and masking","Blending_and_masking.htm");
 aIE(2,0,"matconv","Filtering in the Fourier transform domain","Filter_fourier.htm");
 aIE(2,0,"matdeconv","Filtering in the Fourier transform domain","Filter_fourier.htm");
 aIE(2,0,"medfilt","Median filtering","Median_filtering.htm");
 aIE(2,0,"moment_invariant","Moment Invariants","Moment_Invariants.htm");
 aIE(2,0,"open","Opening and closing","Opening_and_closing.htm");
 aIE(2,0,"or","Boolean functions","Boolean_functions.htm");
 aIE(2,0,"orthocrisp","Crisping","Crisping.htm");
 aIE(2,0,"orthocrisp5","Crisping","Crisping.htm");
 aIE(2,0,"orthosmooth","Smoothing","Smoothing.htm");
 aIE(2,0,"orthosmooth5","Smoothing","Smoothing.htm");
 aIE(2,0,"prewitt","Convolution edge finders","Convolution_edge_finders.htm");
 aIE(2,0,"putregion","Replacing part of an image","Replacing_part_of_an_image.htm");
 aIE(2,0,"quantfilt","Quantile filtering","Quantile_filtering.htm");
 aIE(2,0,"READ_IMAGE","Reading and writing grayscale images","Readwrite_gray.htm");
 aIE(2,0,"READRAW","Reading and writing binary images","Readwrite_raw.htm");
 aIE(2,0,"READRGB","Reading and writing color images","Readwrite_color.htm");
 aIE(2,0,"reg_grow","Region growing","Region_growing.htm");
 aIE(2,0,"relerror","Error measurement","Error_measurement.htm");
 aIE(2,0,"replace","Packed","Packed.htm");
 aIE(2,0,"rgb_to_gray","Converting images - grayscale and color","Converting_images_grayscale.htm");
 aIE(2,0,"rgb_to_hls","Converting images - RGB and HLS/HSV","Converting_images_rgb_hlshsv.htm");
 aIE(2,0,"rgb_to_hsv","Converting images - RGB and HLS/HSV","Converting_images_rgb_hlshsv.htm");
 aIE(2,0,"rgb_to_ycbcr","Converting between RGB and television images","Converting_between_RGB_and_tv.htm");
 aIE(2,0,"rgb_to_yiq","Converting between RGB and television images","Converting_between_RGB_and_tv.htm");
 aIE(2,0,"roberts","Convolution edge finders","Convolution_edge_finders.htm");
 aIE(2,0,"robinson3","Convolution and comparison edge finders","Convolution_and_comparison.htm");
 aIE(2,0,"robinson5","Convolution and comparison edge finders","Convolution_and_comparison.htm");
 aIE(2,0,"rotate","Rotating","Rotating.htm");
 aIE(2,0,"rotate180","Rotating","Rotating.htm");
 aIE(2,0,"rotate270","Rotating","Rotating.htm");
 aIE(2,0,"rotate90","Rotating","Rotating.htm");
 aIE(2,0,"rowgrad","Gradients","Gradients.htm");
 aIE(2,0,"scale","Scaling and clipping","Scaling_and_clipping.htm");
 aIE(2,0,"shape_features","Shape features","Shape_features.htm");
 aIE(2,0,"skeleton","Thinning and skeletonizing","Thinning_and_skeletonizing.htm");
 aIE(2,0,"skeleton2","Thinning and skeletonizing","Thinning_and_skeletonizing.htm");
 aIE(2,0,"sobel","Convolution edge finders","Convolution_edge_finders.htm");
 aIE(2,0,"subcolor","Working with matrices","Working_with_matrices.htm");
 aIE(2,0,"thin","Thinning and skeletonizing","Thinning_and_skeletonizing.htm");
 aIE(2,0,"threshhold","Thresholding","Thresholding.htm");
 aIE(2,0,"translate","Translating","Translating.htm");
 aIE(2,0,"unicrisp","Crisping","Crisping.htm");
 aIE(2,0,"unismooth","Smoothing","Smoothing.htm");
 aIE(2,0,"unismooth5","Smoothing","Smoothing.htm");
 aIE(2,0,"vertflip","Flipping","Flipping.htm");
 aIE(2,0,"warp","Warping","Warping.htm");
 aIE(2,0,"wave2d","Wavelet transform filtering","Wavelet_transform_filtering.htm");
 aIE(2,0,"wavescale","Wavelet transform filtering","Wavelet_transform_filtering.htm");
 aIE(2,0,"wiener2d","Wiener filtering","Wiener_filtering.htm");
 aIE(2,0,"WRITEBMP","Reading and writing grayscale images","Readwrite_gray.htm");
 aIE(2,0,"WRITERAW","Reading and writing binary images","Readwrite_raw.htm");
 aIE(2,0,"WRITERBG","Reading and writing color images","Readwrite_color.htm");
 aIE(2,0,"ycbcr_to_rgb","Converting between RGB and television images","Converting_between_RGB_and_tv.htm");
 aIE(2,0,"yiq_to_rgb","Converting between RGB and television images","Converting_between_RGB_and_tv.htm");
 aIE(2,0,"zoom","Zooming","Zooming.htm");

//-->
</script>
</body>
</html>
