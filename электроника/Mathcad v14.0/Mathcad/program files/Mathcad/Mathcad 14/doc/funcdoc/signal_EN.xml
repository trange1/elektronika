<?xml version="1.0" encoding="UTF-8"?>
<FUNCTIONS>
<help_file>help_%s\signal\signal.htm</help_file>
<function>
<name>bandpass</name>
<local_name>bandpass</local_name>
<params>f1, f2, n, [w]</params>
<category>Signal Processing</category>
<description>Returns coefficients for a bandpass FIR filter with n coefficients and cutoff frequencies f1 and f2, windowed with a taper w.</description>
<help_topic>FIR_filter_design.htm</help_topic>
</function>
<function>
<name>bandstop</name>
<local_name>bandstop</local_name>
<params>f1, f2, n, [w]</params>
<category>Signal Processing</category>
<description>Returns coefficients for a bandstop FIR filter with n coefficients and cutoff frequencies f1 and f2, windowed with taper w.</description>
<help_topic>FIR_filter_design.htm</help_topic>
</function>
<function>
<name>bessel</name>
<local_name>bessel</local_name>
<params>n, scale</params>
<category>Signal Processing</category>
<description>Returns coefficients for an analog Bessel filter of order n; scale controls the gain at cutoff. The output is an argument to the functions iirlow, iirhigh, iirpass or iirstop.</description>
<help_topic>iir_filter_coefficients.htm</help_topic>
</function>
<function>
<name>blackman</name>
<local_name>blackman</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns a Blackman window of width n.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>burg</name>
<local_name>burg</local_name>
<params>v, n</params>
<category>Signal Processing</category>
<description>Returns coefficients for nth order linear prediction generated from the vector v using Burg's method.</description>
<help_topic>linear_prediction_methods.htm</help_topic>
</function>
<function>
<name>butter</name>
<local_name>butter</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns coefficients for an analog Butterworth filter of order n. The output is used as an argument to one of the functions iirlow, iirhigh, iirpass or iirstop.</description>
<help_topic>iir_filter_coefficients.htm</help_topic>
</function>
<function>
<name>ccepstrum</name>
<local_name>ccepstrum</local_name>
<params>A</params>
<category>Signal Processing</category>
<description>Returns a matrix containing the complex cepstrum of a multichannel signal A.</description>
<help_topic>cepstrum_and_complex_cepstrum.htm</help_topic>
</function>
<function>
<name>cepstrum</name>
<local_name>cepstrum</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the cepstrum of the vector v.</description>
<help_topic>cepstrum_and_complex_cepstrum.htm</help_topic>
</function>
<function>
<name>cheby</name>
<local_name>cheby</local_name>
<params>n, b</params>
<category>Signal Processing</category>
<description>Returns a Chebyshev window of width n and parameter b.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>cheby1</name>
<local_name>cheby1</local_name>
<params>n, e</params>
<category>Signal Processing</category>
<description>Returns coefficients for a Type I Chebyshev analog filter of order n; ripple is controlled by the parameter e. The output is used as an argument to one of the functions iirlow, iirhigh, iirpass or iirstop.</description>
<help_topic>iir_filter_coefficients.htm</help_topic>
</function>
<function>
<name>cheby2</name>
<local_name>cheby2</local_name>
<params>n, scale, atten</params>
<category>Signal Processing</category>
<description>Returns coefficients for a Type II Chebyshev analog filter of ord. n with the lower edge of the stopband at scale and stopband attenuation atten. The output is an argument to the functions iirlow, iirhigh, iirpass or iirstop.</description>
<help_topic>iir_filter_coefficients.htm</help_topic>
</function>
<function>
<name>chirpz</name>
<local_name>chirpz</local_name>
<params>v, lo, hi, d</params>
<category>Signal Processing</category>
<description>Returns the frequency spectrum of the signal v between lo and hi at frequency intervals of d.</description>
<help_topic>chirp_z-transform.htm</help_topic>
</function>
<function>
<name>coherence</name>
<local_name>coherence</local_name>
<params>vx, vy, n, r, [w]</params>
<category>Signal Processing</category>
<description>Returns the coherence of vectors vx and vy. The signal vectors are divided into n overlapping intervals with fraction of overlap r. Each data segment is windowed with taper w.</description>
<help_topic>spectral_analysis.htm</help_topic>
</function>
<function>
<name>convol</name>
<local_name>convol</local_name>
<params>vx, vy</params>
<category>Signal Processing</category>
<description>Returns the convolution of the arrays vx and vy.</description>
<help_topic>convolution_and_correlation.htm</help_topic>
</function>
<function>
<name>costaper</name>
<local_name>costaper</local_name>
<params>n, a</params>
<category>Signal Processing</category>
<description>Returns a cosine taper window of length n, with the percentage of raised cosine given by a.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>costr</name>
<local_name>costr</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the cosine transform of the array v.</description>
<help_topic>sine_and_cosine_transforms.htm</help_topic>
</function>
<function>
<name>covar</name>
<local_name>covar</local_name>
<params>vx, vy</params>
<category>Signal Processing</category>
<description>Returns the covariance of the arrays vx and vy.</description>
<help_topic>convolution_and_correlation.htm</help_topic>
</function>
<function>
<name>cspectrum</name>
<local_name>cspectrum</local_name>
<params>vx, vy, n, r, [w]</params>
<category>Signal Processing</category>
<description>Returns the cross spectrum of the vectors vx and vy. The signal vectors are divided into n overlapping intervals with fraction of overlap r. Each data segment is windowed with taper w.</description>
<help_topic>spectral_analysis.htm</help_topic>
</function>
<function>
<name>deconvol</name>
<local_name>deconvol</local_name>
<params>vz, vx</params>
<category>Signal Processing</category>
<description>Returns the deconvolution of the array vz by the array vx.</description>
<help_topic>convolution_and_correlation.htm</help_topic>
</function>
<function>
<name>detrend</name>
<local_name>detrend</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the vector or matrix v with any linear trend removed.</description>
<help_topic>linear_detrending.htm</help_topic>
</function>
<function>
<name>dht</name>
<local_name>dht</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the Hartley transform of the array v.</description>
<help_topic>Hartley_transform.htm</help_topic>
</function>
<function>
<name>dwavelet</name>
<local_name>dwavelet</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns a discrete wavelet transform of the array v.</description>
<help_topic>discrete_wavelet_transform.htm</help_topic>
</function>
<function>
<name>expsmooth</name>
<local_name>expsmooth</local_name>
<params>v, a</params>
<category>Signal Processing</category>
<description>Returns a smoothed version of data in array v generated by exponential smoothing with weight a.</description>
<help_topic>smoothing.htm</help_topic>
</function>
<function>
<name>fftfilt</name>
<local_name>fftfilt</local_name>
<params>v, C, [nfft]</params>
<category>Signal Processing</category>
<description>Returns a matrix with the result of the convolution of a multichannel signal v, with an array C, calculated by computing the FFT of length nfft.</description>
<help_topic> time_response_of_digital_filters.htm</help_topic>
</function>
<function>
<name>gain</name>
<local_name>gain</local_name>
<params>C, f</params>
<category>Signal Processing</category>
<description>Returns the gain at frequency f of a filter with coefficients C.</description>
<help_topic>filter_gain.htm</help_topic>
</function>
<function>
<name>gaussian</name>
<local_name>gaussian</local_name>
<params>n, a</params>
<category>Signal Processing</category>
<description>Returns a Gaussian window of width n; the parameter a controls the peak width.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>gaussn</name>
<local_name>gaussn</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns an n-element vector of random numbers following a Gaussian probability distribution of mean 0 and standard deviation 1.</description>
<help_topic>noise_generators.htm</help_topic>
</function>
<function>
<name>hamming</name>
<local_name>hamming</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns a Hamming window of width n.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>hanning</name>
<local_name>hanning</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns a Hanning window of width n.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>highpass</name>
<local_name>highpass</local_name>
<params>f, n, [w]</params>
<category>Signal Processing</category>
<description>Returns coefficients for a highpass FIR filter with n coefficients and cutoff frequency f, windowed with taper w.</description>
<help_topic>FIR_filter_design.htm</help_topic>
</function>
<function>
<name>hilbert</name>
<local_name>hilbert</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the Hilbert transform of the array v.</description>
<help_topic>hilbert_transform.htm</help_topic>
</function>
<function>
<name>icostr</name>
<local_name>icostr</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the inverse cosine transform of the array v.</description>
<help_topic>sine_and_cosine_transforms.htm</help_topic>
</function>
<function>
<name>idht</name>
<local_name>idht</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the inverse Hartley transform of the array v.</description>
<help_topic>Hartley_transform.htm</help_topic>
</function>
<function>
<name>idwavelet</name>
<local_name>idwavelet</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the inverse of the discrete wavelet transform carried out by the dwavelet function.</description>
<help_topic>discrete_wavelet_transform.htm</help_topic>
</function>
<function>
<name>iirhigh</name>
<local_name>iirhigh</local_name>
<params>C, f</params>
<category>Signal Processing</category>
<description>Returns coefficients for a highpass IIR filter with cutoff frequency f. The input array C is generated by one of the functions cheby1, cheby2, bessel, or butter.</description>
<help_topic>iir_filters.htm</help_topic>
</function>
<function>
<name>iirlow</name>
<local_name>iirlow</local_name>
<params>C, f</params>
<category>Signal Processing</category>
<description>Returns coefficients for a lowpass IIR filter with cutoff frequency f. The input array C is generated by one of the functions cheby1, cheby2, bessel, or butter.</description>
<help_topic>iir_filters.htm</help_topic>
</function>
<function>
<name>iirpass</name>
<local_name>iirpass</local_name>
<params>C, lowf, highf</params>
<category>Signal Processing</category>
<description>Returns coefficients for a bandpass IIR filter with cutoff frequencies lowf and highf. The input array C is generated by one of the functions cheby1, cheby2, bessel, or butter.</description>
<help_topic>iir_filters.htm</help_topic>
</function>
<function>
<name>iirstop</name>
<local_name>iirstop</local_name>
<params>C, lowf, highf</params>
<category>Signal Processing</category>
<description>Returns coefficients for a bandstop IIR filter with cutoff frequencies lowf and highf. The input array C is generated by one of the functions cheby1, cheby2, bessel, or butter.</description>
<help_topic>iir_filters.htm</help_topic>
</function>
<function>
<name>interpolate</name>
<local_name>interpolate</local_name>
<params>v, n</params>
<category>Signal Processing</category>
<description>Returns an interpolated version of the vector v with n times as many points as v.</description>
<help_topic>interpolation_and_resampling.htm</help_topic>
</function>
<function>
<name>isintr</name>
<local_name>isintr</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the inverse sine transform of the array v.</description>
<help_topic>sine_and_cosine_transforms.htm</help_topic>
</function>
<function>
<name>kaiser</name>
<local_name>kaiser</local_name>
<params>n, b</params>
<category>Signal Processing</category>
<description>Returns a Kaiser window of width n and parameter b.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>lcorr</name>
<local_name>lcorr</local_name>
<params>vx, vy</params>
<category>Signal Processing</category>
<description>Returns a vector giving the correlation of the vectors vx and vy at each possible lag.</description>
<help_topic> correlation_and_partial_autocorrelation.htm</help_topic>
</function>
<function>
<name>lowpass</name>
<local_name>lowpass</local_name>
<params>f, n, [w]</params>
<category>Signal Processing</category>
<description>Returns coefficients for a lowpass FIR filter with n coefficients and cutoff frequency f, windowed with taper w.</description>
<help_topic>FIR_filter_design.htm</help_topic>
</function>
<function>
<name>mag</name>
<local_name>mag</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns a vector containing the magnitudes of the elements in the complex array v.</description>
<help_topic>Magnitude_and_phase.htm</help_topic>
</function>
<function>
<name>makeri</name>
<local_name>makeri</local_name>
<params>magvec, phasevec</params>
<category>Signal Processing</category>
<description>Returns a vector of complex numbers whose magnitudes and phases are contained in magvec and phasevec.</description>
<help_topic>Magnitude_and_phase.htm</help_topic>
</function>
<function>
<name>medfilt1d</name>
<local_name>medfilt1d</local_name>
<params>M, n</params>
<category>Signal Processing</category>
<description>Returns the multichannel signal M, filtered with a median filter of length n.</description>
<help_topic>smoothing.htm</help_topic>
</function>
<function>
<name>movavg</name>
<local_name>movavg</local_name>
<params>v, n</params>
<category>Signal Processing</category>
<description>Returns a smoothed version of data in array v created by taking a moving average with a window of width n.</description>
<help_topic>smoothing.htm</help_topic>
</function>
<function>
<name>multirate</name>
<local_name>multirate</local_name>
<params>v, n, m, [f]</params>
<category>Signal Processing</category>
<description>Returns a version of multichannel signal v resampled by a factor of n/m, using the optional argument f as the lowpass interpolating filter.</description>
<help_topic>interpolation_and_resampling.htm</help_topic>
</function>
<function>
<name>nuttall</name>
<local_name>nuttall</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns a Nuttall window of width n.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>onefn</name>
<local_name>onefn</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns an n-element vector of 1/f noise.</description>
<help_topic>noise_generators.htm</help_topic>
</function>
<function>
<name>phase</name>
<local_name>phase</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns a vector containing the phases of the elements in the complex array v.</description>
<help_topic>Magnitude_and_phase.htm</help_topic>
</function>
<function>
<name>phasecor</name>
<local_name>phasecor</local_name>
<params>phasevec</params>
<category>Signal Processing</category>
<description>Returns a vector generated from the array of phases phasevec by removing jump discontinuities.</description>
<help_topic>Magnitude_and_phase.htm</help_topic>
</function>
<function>
<name>plcorr</name>
<local_name>plcorr</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns a vector giving the partial autocorrelation of the vector v at each lag.</description>
<help_topic> correlation_and_partial_autocorrelation.htm</help_topic>
</function>
<function>
<name>pspectrum</name>
<local_name>pspectrum</local_name>
<params>v, n, r, [w]</params>
<category>Signal Processing</category>
<description>Returns the power spectrum of v, computed by dividing v into n overlapping segments with overlap fraction r. Each data segment is windowed with taper w.</description>
<help_topic>spectral_analysis.htm</help_topic>
</function>
<function>
<name>quantize</name>
<local_name>quantize</local_name>
<params>v, n</params>
<category>Signal Processing</category>
<description>Returns a vector that assigns the elements of v to n equally spaced levels.</description>
<help_topic>quantizing_a_signal.htm</help_topic>
</function>
<function>
<name>recenter</name>
<local_name>recenter</local_name>
<params>A</params>
<category>Signal Processing</category>
<description>Returns a recentered version of array A, cyclically permuted to bring the first element of A to the middle.</description>
<help_topic>cyclic_permutation.htm</help_topic>
</function>
<function>
<name>remez</name>
<local_name>remez</local_name>
<params>vg, vr, vw, n</params>
<category>Signal Processing</category>
<description>Returns coefficients for an FIR filter of length n generated by the Remez exchange algorithm.</description>
<help_topic>FIR_filters_by_remez_exchange.htm</help_topic>
</function>
<function>
<name>resample</name>
<local_name>resample</local_name>
<params>v, m, n</params>
<category>Signal Processing</category>
<description>Returns a vector obtained from v by n-fold interpolation and then sampling every mth point.</description>
<help_topic>interpolation_and_resampling.htm</help_topic>
</function>
<function>
<name>response</name>
<local_name>response</local_name>
<params>v, C, n</params>
<category>Signal Processing</category>
<description>Returns a vector giving n terms of the response of an input vector v to an FIR filter with coefficient array C.</description>
<help_topic> time_response_of_digital_filters.htm</help_topic>
</function>
<function>
<name>sintr</name>
<local_name>sintr</local_name>
<params>v</params>
<category>Signal Processing</category>
<description>Returns the sine transform of the array v.</description>
<help_topic>sine_and_cosine_transforms.htm</help_topic>
</function>
<function>
<name>snr</name>
<local_name>snr</local_name>
<params>vx, vy, n, r, [w]</params>
<category>Signal Processing</category>
<description>Returns the signal-to-noise ratio for vx and vy. The signal vectors are divided into n overlapping segments with fraction of overlap r. Each data segment is windowed with taper w.</description>
<help_topic>spectral_analysis.htm</help_topic>
</function>
<function>
<name>stft</name>
<local_name>stft</local_name>
<params>v, [n], [s], [w]</params>
<category>Signal Processing</category>
<description>Returns a matrix containing the short time Fourier transform of a signal v; computes n frequencies, every s samples, and tapers each block with window (or window type) w.</description>
<help_topic>short-time_fourier_transform.htm</help_topic>
</function>
<function>
<name>taprect</name>
<local_name>taprect</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns a tapered rectangular window of width n.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>timecorr</name>
<local_name>timecorr</local_name>
<params>v, t, l, s, [d]</params>
<category>Signal Processing</category>
<description>Returns a matrix containing the samples of a time-depemdent autocorrelation function for a signal v, type t, l number of lags, step size s, and an optional scalar or matrix argument d.</description>
<help_topic> time-frequency_representations_and_local_autocorrelation.htm</help_topic>
</function>
<function>
<name>timefreq</name>
<local_name>timefreq</local_name>
<params>v, t, f, s, [d]</params>
<category>Signal Processing</category>
<description>Returns a matrix containing the samples of a time-depemdent autocorrelation function for a signal v, type t, f number of frequencies, step size s, and an optional scalar or matrix argument d.</description>
<help_topic> time-frequency_representations_and_local_autocorrelation.htm</help_topic>
</function>
<function>
<name>triangular</name>
<local_name>triangular</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns a triangular window of width n.</description>
<help_topic>signal_windowing.htm</help_topic>
</function>
<function>
<name>twodconvol</name>
<local_name>twodconvol</local_name>
<params>A, B</params>
<category>Signal Processing</category>
<description>Returns the two-dimensional convolution of the arrays A and B.</description>
<help_topic>two-dimensional_convolution.htm</help_topic>
</function>
<function>
<name>walsh</name>
<local_name>walsh</local_name>
<params>n, k</params>
<category>Signal Processing</category>
<description>Returns the kth Walsh function of order n (n between 0 and 12).</description>
<help_topic>walsh_transform.htm</help_topic>
</function>
<function>
<name>whiten</name>
<local_name>whiten</local_name>
<params>n</params>
<category>Signal Processing</category>
<description>Returns an n-element vector of uniformly distributed white noise.</description>
<help_topic>noise_generators.htm</help_topic>
</function>
<function>
<name>yulew</name>
<local_name>yulew</local_name>
<params>v, n</params>
<category>Signal Processing</category>
<description>Returns coefficients for nth order linear prediction generated from the vector v using the Yule-Walker algorithm.</description>
<help_topic>linear_prediction_methods.htm</help_topic>
</function>
</FUNCTIONS>
